@using ServerBB_Web.Service
@using ServerBB_Web.Service.Model
@using System.Globalization

@rendermode InteractiveServer

@inject SpendingService SpendingService


<div class="card" style="width: 18rem; margin-top: 20px;">
    <div class="card-body">
        <h6 class="card-title">Gasto atual:</h6>
        @{
            string colorClass = (spending != null && spending.Value > 4000) ? "text-danger" : "text-primary";
        }
        <h6 class="card-subtitle mb-2 @colorClass">@((spending != null) ? $"R$ {spending.Value.ToString("N2", CultureInfo.GetCultureInfo("pt-BR"))}" : string.Empty)</h6>
        <div style="margin-top: 5px;">
            <button @onclick="GetSpending" type="button" class="btn btn-info">Calcular</button>
        </div>
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger" role="alert" style="margin-top: 5px;">
                @errorMessage
            </div>
        }
    </div>
</div>

@code {
    private Spending spending;
    private string errorMessage;

    private async Task GetSpending()
    {
        try
        {
            spending = await SpendingService.GetSpendingAsync();
            errorMessage = null; 
        }
        catch (Exception ex)
        {
            errorMessage = $"Erro ao calcular o gasto: {ex.Message}";
        }
        
        // Atualiza a UI
        StateHasChanged(); }
}