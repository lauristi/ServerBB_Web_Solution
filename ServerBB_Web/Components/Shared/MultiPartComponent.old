@page "/download"

@using Blazored.LocalStorage
@using System.Net.Http.Json
@using System.Text.Json
@using System.Reflection.Metadata
@using ServerBB_Web.Service.Interface
@using ServerBB_Web.Service.Model
@using ServerBB_Web.Service.Refs
@using System.Globalization

@rendermode InteractiveServer

@inject HttpClient _HttpClient
@inject IJSRuntime _JSRuntime
@inject IFileService _FileService
@inject ILocalStorageService _LocalStorage


<script src="javascript/downloadService.js"></script>

<button @onclick="DownloadFiles">Download Files</button>


<div class="row g-1">
    <!-- Usando g-1 para espaçamento pequeno -->
    @* Mercado *@
    <div class="col" style="padding-left: 5px; padding-right: 5px;">
        <div class="card rounded-3" style="width: 18rem; margin-top: 20px;">
            <div class="card-body">
                <h6 class="card-title">Super Mercado:</h6>
                @{
                    string colorClassSuperMarket = (SuperMarket > 4000) ? "text-danger" : "text-primary";
                }
                <h6 class="card-subtitle mb-2 @colorClassSuperMarket">@($"R$ {SuperMarket.ToString("N2", CultureInfo.GetCultureInfo("pt-BR"))}")</h6>
            </div>
        </div>
    </div>

    @* Farmacia *@
    <div class="col" style="padding-left: 5px; padding-right: 5px;">
        <div class="card rounded-3" style="width: 18rem; margin-top: 20px;">
            <div class="card-body">
                <h6 class="card-title">Farmácia:</h6>
                @{
                    string colorClassPharmacy = (Pharmacy > 4000) ? "text-danger" : "text-primary";
                }
                <h6 class="card-subtitle mb-2 @colorClassPharmacy">@($"R$ {Pharmacy.ToString("N2", CultureInfo.GetCultureInfo("pt-BR"))}")</h6>
            </div>
        </div>
    </div>

    @* Gasto Extra *@
    <div class="col" style="padding-left: 5px; padding-right: 5px;">
        <div class="card rounded-3" style="width: 18rem; margin-top: 20px;">
            <div class="card-body">
                <h6 class="card-title">Extra:</h6>
                @{
                    string colorClassExtra = (Extra > 4000) ? "text-danger" : "text-primary";
                }
                <h6 class="card-subtitle mb-2 @colorClassExtra">@($"R$ {Extra.ToString("N2", CultureInfo.GetCultureInfo("pt-BR"))}")</h6>
            </div>
        </div>
    </div>

    @* Total *@
    <div class="col" style="padding-left: 5px; padding-right: 5px;">
        <div class="card rounded-3" style="width: 18rem; margin-top: 20px;">
            <div class="card-body">
                <h6 class="card-title">Total:</h6>
                @{
                    string colorClassTotal = (Total > 4000) ? "text-danger" : "text-primary";
                }
                <h6 class="card-subtitle mb-2 @colorClassTotal">@($"R$ {Total.ToString("N2", CultureInfo.GetCultureInfo("pt-BR"))}")</h6>
            </div>
        </div>
    </div>
</div>



@code {
    private decimal SuperMarket;
    private decimal Pharmacy;
    private decimal Extra;
    private decimal Total;

    private async Task DownloadFiles()
    {
        var response = await _HttpClient.GetAsync("api/bb/multiPartProcessFile2");

        if (response.IsSuccessStatusCode)
        {

            MultiPartResponse multiPartResponse = new MultiPartResponse();
            RecoveredData recoveredData = new RecoveredData();

            var responseString = await response.Content.ReadAsStringAsync();
            
            multiPartResponse = JsonSerializer.Deserialize<MultiPartResponse>(responseString);
            recoveredData = JsonSerializer.Deserialize<RecoveredData>(multiPartResponse.JsonContent);


            //Recuperacao do Json
            SuperMarket = recoveredData.SuperMarket;
            Pharmacy = recoveredData.Pharmacy;
            Total = recoveredData.Total;
            
            //Recuperacao do Arquivo
            
            string fileName = Path.GetFileName(recoveredData.FilePath);
            byte[] fileBytes = multiPartResponse.FileContent;

            // Use o serviço de download para baixar o arquivo
            await _FileService.DownloadFileByteAsync(fileName, fileBytes);

        }
        else
        {
            // Trate o erro conforme necessário
        }
    }
}
